{"ast":null,"code":"var _jsxFileName = \"/home/labber/portfolio/frontend/src/App.js\";\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Grid, Card, CardMedia, CardContent, Button } from '@mui/material';\n\n// Sample data for projects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  title: 'Project One',\n  imageUrl: '/path-to-image-1.jpg'\n}, {\n  id: 2,\n  title: 'Project Two',\n  imageUrl: '/path-to-image-2.jpg'\n}\n// ...add more projects as needed\n];\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        padding: '20px'\n      },\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"140\",\n            image: project.imageUrl,\n            alt: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Grid","Card","CardMedia","CardContent","Button","jsxDEV","_jsxDEV","projects","id","title","imageUrl","App","children","container","spacing","style","padding","map","project","item","xs","sm","md","component","height","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","variant","_c","$RefreshReg$"],"sources":["/home/labber/portfolio/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, Grid, Card, CardMedia, CardContent, Button } from '@mui/material';\n\n// Sample data for projects\nconst projects = [\n  {\n    id: 1,\n    title: 'Project One',\n    imageUrl: '/path-to-image-1.jpg',\n  },\n  {\n    id: 2,\n    title: 'Project Two',\n    imageUrl: '/path-to-image-2.jpg',\n  },\n  // ...add more projects as needed\n];\n\nconst App = () => {\n  return (\n    <div>\n      {/* AppBar and Toolbar here */}\n      <Grid container spacing={2} style={{ padding: '20px' }}>\n        {projects.map(project => (\n          <Grid item xs={12} sm={6} md={4} key={project.id}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                height=\"140\"\n                image={project.imageUrl}\n                alt={project.title}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {project.title}\n                </Typography>\n                {/* Additional content */}\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,eAAe;;AAEvG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE;AACZ;AACA;AAAA,CACD;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEL,OAAA;IAAAM,QAAA,eAEEN,OAAA,CAACN,IAAI;MAACa,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAJ,QAAA,EACpDL,QAAQ,CAACU,GAAG,CAACC,OAAO,iBACnBZ,OAAA,CAACN,IAAI;QAACmB,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAV,QAAA,eAC9BN,OAAA,CAACL,IAAI;UAAAW,QAAA,gBACHN,OAAA,CAACJ,SAAS;YACRqB,SAAS,EAAC,KAAK;YACfC,MAAM,EAAC,KAAK;YACZC,KAAK,EAAEP,OAAO,CAACR,QAAS;YACxBgB,GAAG,EAAER,OAAO,CAACT;UAAM;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFxB,OAAA,CAACH,WAAW;YAAAS,QAAA,eACVN,OAAA,CAACP,UAAU;cAACgC,YAAY;cAACC,OAAO,EAAC,IAAI;cAACT,SAAS,EAAC,KAAK;cAAAX,QAAA,EAClDM,OAAO,CAACT;YAAK;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAd6BZ,OAAO,CAACV,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAe1C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACG,EAAA,GA1BItB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}